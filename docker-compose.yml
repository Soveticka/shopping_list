version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: shopping-list-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: shopping_list
      POSTGRES_USER: shopping_user
      POSTGRES_PASSWORD: shopping_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./backend/database/schema.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - shopping-list-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U shopping_user -d shopping_list"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: shopping-list-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=shopping_list
      - DB_USER=shopping_user
      - DB_PASSWORD=shopping_password
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production-please
      - JWT_EXPIRES_IN=7d
      - PORT=3001
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - shopping-list-network

  # Frontend (Nginx)
  frontend:
    build: .
    container_name: shopping-list-frontend
    ports:
      - "3000:80"
    restart: unless-stopped
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
    volumes:
      - nginx-logs:/var/log/nginx
    networks:
      - shopping-list-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres-data:
    driver: local
  nginx-logs:
    driver: local

networks:
  shopping-list-network:
    driver: bridge